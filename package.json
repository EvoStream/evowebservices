{
  "name": "evowebservices",
  "description": "EMS Web Services are a suite of Node.js scripts which can be hosted by any Node.js Server and leverage the EMS’s Event Notification System and Runtime-APIs.",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "node ./bin/www"
  },
  "license": "MIT",
  "author": {
    "name": "Toni Panganiban",
    "email": "tpanganiban@evostream.com",
    "url": "https://evostream.com/"
  },
  "dependencies": {
    "body-parser": "~1.13.2",
    "comment-json": "^1.1.3",
    "concat-stream": "^1.5.1",
    "debug": "~2.2.0",
    "express": "~4.13.1",
    "jsonfile": "^2.4.0",
    "morgan": "~1.6.1",
    "request-enhanced": "^0.1.1",
    "s3": "^4.4.0",
    "tcp-ping": "^0.1.1",
    "winston": "^2.2.0"
  },
  "readme": "## Overview\n\nEMS Web Services are a suite of scripts hosted on a node server that leverage the EMS's Event Notification System and Runtime-APIs. The EMS Web Services provide a convenient way to extend and customize the EMS for your projects and environments.\n\nThis document is written for users of the EMS Web Services. It is expected that you have a basic understanding of multimedia streaming and the technologies required to perform multimedia streaming.\n\n \n\n## Getting Started\n\n### Pre-requisites\n\nBefore you begin, you should make sure you have installed all these prerequisites on your development machine.\n\n1. **EMS** - Make sure you have Evostream Media Server installed in your system. Download here: <https://evostream.com/software-downloads/>\n2. **Node.js & npm** - Download & Install Node.js and the npm package manager\n\n \n\n### Installation\n\n#### Windows Installation\n\nNote: Make sure that you have the Node.js for Windows installed on your system.\n\n1. **Download** the evowebservices Windows batch file installer from our Github\n   \n   Link: <https://github.com/EvoStream/evowebservices-archives/tree/master/installers>\n   \n2. Double click on the .bat file to **install** evowebservices\n   \n   ``` \n   evowebservices-0.0.1-win-x64.bat\n   ```\n   \n3. If the installation is successful, evowebservices will start automatically\n   \n   ``` \n   starting evowebservices using npm....\n   \n   > evowebservices@0.0.0 start C:\\node_evowebservices\\node_modules\\evowebservices\n   > node ./bin/www\n   \n   STARTED: evowebservices:server Listening on port 4000\n   info: STARTED: evowebservices:server Listening on port 4000\n   info: Get enabled Plugins\n   ```\n\n\n\n####  Linux Installation\n\n1.  **Download** the evowebservices Bash Script file installer from our Github.\n   \n   Link: <https://github.com/EvoStream/evowebservices-archives/tree/master/installers>\n   \n2. Locate the installer file, **install** the script by typing this in terminal:\n   \n   ``` \n   ./evowebservices-0.0.1-linux-x64.sh\n   ```\n   \n3. If the installation is successful, evowebservices will start automatically\n   \n   ``` \n   Starting EVOWEBSERVICES...\n   \n   > evowebservices@0.0.0 start /home/user/Desktop/node_modules/evowebservices\n   > node ./bin/www\n   \n   STARTED: evowebservices:server Listening on port 4000 \n   info: STARTED: evowebservices:server Listening on port 4000 \n   info: Get enabled Plugins\n   ```\n\n\n\n#### Distribution Content\n\n``` \n/ node_evowebservices\n├── node_modules\n│   └── evowebservices\n│       ├── base_plugins\n│ \t\t│ \t├── basehdsplugin.js\n│ \t\t│ \t├── basehlsplugin.js\n│ \t\t│ \t└── baseplugin.js\n│       ├── bin\n│ \t\t│ \t└── www\n│       ├── config\n│ \t\t│ \t├── logging.json\n│ \t\t│ \t└── plugins.json\n│       ├── core_modules\n│ \t\t│ \t└── ems-api-core.js\n│       ├── logs\n│ \t\t│ \t└── evowebservices.log\n│       ├── node_modules\n│ \t\t│ \t├── body-parser\n│ \t\t│ \t├── comment-json\n│ \t\t│ \t├── concat-stream\n│ \t\t│ \t├── debug\n│ \t\t│ \t├── express\n│ \t\t│ \t├── morgan\n│ \t\t│ \t├── request-enhanced\n│ \t\t│ \t├── s3\n│ \t\t│ \t└── winston\n│       ├── plugins\n│ \t\t│ \t├── amazondashupload.js\n│ \t\t│ \t├── amazonhdsupload.js\n│ \t\t│ \t├── amazonhlsupload.js\n│ \t\t│ \t├── streamautorouter.js\n│ \t\t│ \t├── streamloadbalancer.js\n│ \t\t│ \t└── streamrecorder.js\n│       ├── routes\n│ \t\t│ \t├── evowebservices.js\n│ \t\t│ \t└── index.js\n│       ├── services\n│ \t\t│ \t└── plugin-service.js\n│       ├── views\n│ \t\t│ \t├── error.hbs\n│ \t\t│ \t├── index.hbs\n│ \t\t│ \t└── layout.hbs\n│       ├── app.js\n│       ├── LICENSE\n│       ├── package.json\n└──     └── README.txt\n\n```\n\n\n\n**Note:** **All plugins are disabled**. Stop the evowebservices then configure the plugins to be used. Start the evowebervices by calling `npm start` in terminal.\n\n\n\nPlease refer to the link for more information:\n\n<http://docs.evostream.com/ems_web_services_user_guide/table_of_contents> \n\n\n\n\n\n## Plugin Descriptions\n\n- **Stream AutoRouting**\n\n​\tAutomatically forwards a stream to another EMS via RTMP.\n\n- **Stream Recorder**\n\n​\tAutomatically records streams that enters EMS.\n\n- **Stream Load Balancer**\n\n​\tEnsures that a group of EMS instances maintain the same collection of inbound (source) streams.\n\n- **Amazon S3 HLS Upload**\n\n​\tAutomatically uploads an HLS stream to an Amazon S3 storage instance.\n\n- **Amazon S3 HDS Upload**\n\n​\tAutomatically uploads an HDS stream to an Amazon S3 storage instance.\n\n- **Amazon S3 DASH Upload**\n\n​\tAutomatically uploads an DASH stream to an Amazon S3 storage instance.\n\n\n\nSee <http://docs.evostream.com/ems_web_services_user_guide/ems_web_services_plugins> for more information.\n\n\n\n## Configuration\n\nThe evowebservices configurations are found on the `/evowebservices/config` directory:\n\n- **plugins.json**\n\n​\tThis is the configuration to enable plugins and set the configuration for each plugin.\n\n- **Log Files**\n\n​\tThis is the configuration to enable logging of the evowebservices to a file and the console.\n\n\n\n\n\n\n\n## Running the evowebservices \n\nOnce you have everything configured, you can start the evowebservices by going to the evowebservices folder where it was installed and execute command:\n\nSend the following command in the terminal:\n\n``` \nnpm start\n```\n\n\n\n## Stopping the evowebservices \n\nIf you wish to stop running the evowebservices, execute **CRTL+C** command in the console where the evowebservices is running:\n\n``` \nTerminate batch job (Y/N)?\n```\n\nType **Y** and press **Enter**. The terminal will now close and running services will stop.\n\n**Note:** Sending CRTL+C in Linux will automatically stop the evowebservices.\n\n\n\n## License\n\n**(The MIT License)**\n\n \n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n \n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n \n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "evowebservices@0.0.0",
  "_shasum": "0074003691f9d3b07b0a235fd5ca6561074f4188",
  "_resolved": "https://github.com/EvoStream/evowebservices/tarball/master",
  "_from": "https://github.com/EvoStream/evowebservices/tarball/master"
}
